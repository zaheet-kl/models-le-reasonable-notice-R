name: deploy-model-training-pipeline

on:
  workflow_dispatch:
jobs:
  set-env-branch:
    runs-on: ubuntu-latest
    outputs:
      config-file: ${{ steps.set-output-defaults.outputs.config-file }}
    steps:
      - id: set-prod-branch
        name: set-prod-branch
        if: ${{ github.ref == 'refs/heads/main'}}
        run: echo "config_env=config-prod.yaml" >> $GITHUB_ENV;
      - id: set-dev-branch
        name: setdevbranch
        if: ${{ github.ref != 'refs/heads/main'}}
        run: echo "config_env=config-nonp.yaml" >> $GITHUB_ENV;
      - id: set-output-defaults
        name: set-output-defaults
        run: |
          echo "config-file=$config_env" >> $GITHUB_OUTPUT;
  get-config:
    needs: set-env-branch
    uses: adr-chambers/mlops-templates/.github/workflows/read-yaml.yml@main
    with:
      file_name: ${{ needs.set-env-branch.outputs.config-file}}
  run-model-training-pipeline:
    needs: get-config
    uses: adr-chambers/mlops-templates/.github/workflows/run-pipeline.yml@main
    with:
      resource_group: ${{ needs.get-config.outputs.resource_group }}
      workspace_name: ${{ needs.get-config.outputs.aml_workspace }}
      parameters-file: pipeline.yaml
      job-name: test
    secrets:
      creds: ${{secrets.AZURE_CREDENTIALS}}
  register-model:
    needs: 
      - run-model-training-pipeline
      - get-config
    uses: adr-chambers/mlops-templates/.github/workflows/register-custom-model.yml@main
    with:
      resource_group: ${{ needs.get-config.outputs.resource_group }}
      workspace_name: ${{ needs.get-config.outputs.aml_workspace }}      
      name: rn_best
      job-name: ${{ needs.run-model-training-pipeline.outputs.run_id }}
      named-output: trained_model
    secrets:
      creds: ${{secrets.AZURE_CREDENTIALS}}